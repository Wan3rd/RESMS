/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package myapps;

import java.awt.Color;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import mylibs.Buy;
import mylibs.Data;
import mylibs.Lot;
import mylibs.Reserve;

/**
 *
 * @author DESKTOP
 */
public class ManagePurchasesGUI extends javax.swing.JFrame {

    /**
     * Creates new form ManagePendingsGUI
     */
    public ManagePurchasesGUI() {
        initComponents();
        setLocationRelativeTo(null); // Center the form on the screen
        modifybtn.setEnabled(false);
        displayPendingLots();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        managependingsnav = new javax.swing.JLabel();
        generatereportnav = new javax.swing.JLabel();
        managelotnav = new javax.swing.JLabel();
        managecustomersnav = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        backbtn = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        pendingsTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        buyid = new javax.swing.JLabel();
        modifybtn = new javax.swing.JButton();
        searchField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(null);
        setMinimumSize(null);
        setResizable(false);
        setSize(new java.awt.Dimension(1200, 700));

        jPanel2.setBackground(new java.awt.Color(102, 102, 102));
        jPanel2.setMaximumSize(null);
        jPanel2.setPreferredSize(new java.awt.Dimension(1200, 700));

        jPanel3.setBackground(new java.awt.Color(204, 204, 255));
        jPanel3.setLayout(null);

        managependingsnav.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        managependingsnav.setText("Manage Purchases");
        managependingsnav.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                managependingsnavMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                managependingsnavMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                managependingsnavMouseExited(evt);
            }
        });
        jPanel3.add(managependingsnav);
        managependingsnav.setBounds(10, 20, 230, 30);

        generatereportnav.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        generatereportnav.setText("Generate Report");
        generatereportnav.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                generatereportnavMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                generatereportnavMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                generatereportnavMouseExited(evt);
            }
        });
        jPanel3.add(generatereportnav);
        generatereportnav.setBounds(270, 20, 200, 32);

        managelotnav.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        managelotnav.setText("Manage Lots");
        managelotnav.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                managelotnavMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                managelotnavMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                managelotnavMouseExited(evt);
            }
        });
        jPanel3.add(managelotnav);
        managelotnav.setBounds(520, 20, 160, 32);

        managecustomersnav.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        managecustomersnav.setText("Manage Users");
        managecustomersnav.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                managecustomersnavMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                managecustomersnavMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                managecustomersnavMouseExited(evt);
            }
        });
        jPanel3.add(managecustomersnav);
        managecustomersnav.setBounds(710, 20, 240, 32);

        jSeparator1.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator1.setForeground(new java.awt.Color(0, 0, 0));
        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jPanel3.add(jSeparator1);
        jSeparator1.setBounds(690, 10, 10, 50);

        jSeparator2.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator2.setForeground(new java.awt.Color(0, 0, 0));
        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jPanel3.add(jSeparator2);
        jSeparator2.setBounds(250, 10, 10, 50);

        jSeparator3.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator3.setForeground(new java.awt.Color(0, 0, 0));
        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jPanel3.add(jSeparator3);
        jSeparator3.setBounds(490, 10, 10, 50);

        backbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/back.png"))); // NOI18N
        backbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backbtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                backbtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                backbtnMouseExited(evt);
            }
        });
        jPanel3.add(backbtn);
        backbtn.setBounds(1130, 10, 48, 48);

        pendingsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Block Number", "Lot Number", "Name", "Username", "Contact Number", "Email", "Payment Method", "Status", "Message"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        pendingsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pendingsTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(pendingsTable);
        if (pendingsTable.getColumnModel().getColumnCount() > 0) {
            pendingsTable.getColumnModel().getColumn(0).setMaxWidth(100);
            pendingsTable.getColumnModel().getColumn(9).setPreferredWidth(200);
        }

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Purchase ID:");

        buyid.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N

        modifybtn.setBackground(new java.awt.Color(204, 204, 255));
        modifybtn.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        modifybtn.setText("Modify Purchase");
        modifybtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifybtnActionPerformed(evt);
            }
        });

        searchField.setFont(new java.awt.Font("Perpetua", 0, 24)); // NOI18N
        searchField.setForeground(new java.awt.Color(153, 153, 153));
        searchField.setText(" Search...");
        searchField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                searchFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                searchFieldFocusLost(evt);
            }
        });
        searchField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchFieldActionPerformed(evt);
            }
        });
        searchField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchFieldKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1078, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(modifybtn, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(371, 371, 371))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(buyid, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(67, Short.MAX_VALUE))
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 494, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(buyid, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(8, 8, 8)
                        .addComponent(modifybtn))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void modifybtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifybtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = pendingsTable.getSelectedRow();

    // Ensure a row is selected
        if (selectedRow != -1) 
        {
            String id = pendingsTable.getValueAt(selectedRow, 0).toString();

            Buy chosenBuy = Data.chosenbuy(id);
            Reserve chosenReserve = Data.chosenReserve(id); 

            if (chosenBuy != null) 
            {
                ModifyPurchaseGUI modi = new ModifyPurchaseGUI(chosenBuy);
                modi.setVisible(true); // Show the ModifyPurchaseGUI
            } 
            // If it's a Reserve, open ModifyReserveGUI (Assuming this GUI exists)
            else if (chosenReserve != null) 
            {
                ModifyReservationGUI modi = new ModifyReservationGUI(chosenReserve);
                modi.setVisible(true); // Show the ModifyReserveGUI
            } else {
                JOptionPane.showMessageDialog(this, "Selected item not found.", "Error", JOptionPane.ERROR_MESSAGE);
                return; // Exit the method if neither Buy nor Reserve found
            }

                this.dispose(); // Close current form if needed
            } else {
                JOptionPane.showMessageDialog(this, "Please select a row to modify.", "Warning", JOptionPane.WARNING_MESSAGE);
            }
    }//GEN-LAST:event_modifybtnActionPerformed

    private void searchFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchFieldFocusGained
        if(searchField.getText().equals(" Search...")){
            searchField.setText("");
            searchField.setForeground(new Color(153,153,153));
        }
    }//GEN-LAST:event_searchFieldFocusGained

    private void searchFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchFieldFocusLost
        if(searchField.getText().equals("")){
            searchField.setText(" Search...");
            searchField.setForeground(new Color(153,153,153));
        }
    }//GEN-LAST:event_searchFieldFocusLost

    private void searchFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchFieldActionPerformed

    private void searchFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchFieldKeyReleased
        String searchQuery = searchField.getText().toLowerCase(); // Get the search query and convert to lowercase for case-insensitive search
        filterLots(searchQuery); // Call method to filter lots
    }//GEN-LAST:event_searchFieldKeyReleased

    private void backbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backbtnMouseClicked
        // TODO add your handling code here:
        this.setVisible(false);
        AdminUI admin = new AdminUI();
        admin.setVisible(true);
    }//GEN-LAST:event_backbtnMouseClicked

    private void managecustomersnavMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_managecustomersnavMouseClicked
        // TODO add your handling code here:
        this.setVisible(false);
        ManageCustomersGUI managecustomers = new ManageCustomersGUI();
        managecustomers.setVisible(true);
    }//GEN-LAST:event_managecustomersnavMouseClicked

    private void managelotnavMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_managelotnavMouseClicked
        // TODO add your handling code here:
        this.setVisible(false);
        ManageLotGUI managelot = new ManageLotGUI();
        managelot.setVisible(true);
    }//GEN-LAST:event_managelotnavMouseClicked

    private void generatereportnavMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_generatereportnavMouseClicked
        // TODO add your handling code here:
        this.setVisible(false);
        ManageReportGUI manage = new ManageReportGUI();
        manage.setVisible(true);
    }//GEN-LAST:event_generatereportnavMouseClicked

    private void managependingsnavMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_managependingsnavMouseClicked
        // TODO add your handling code here:
        this.setVisible(false);
        ManagePurchasesGUI managepurchases = new ManagePurchasesGUI();
        managepurchases.setVisible(true);
    }//GEN-LAST:event_managependingsnavMouseClicked

    private void pendingsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pendingsTableMouseClicked
        // TODO add your handling code here:
        int selectedRow = pendingsTable.getSelectedRow(); // Get selected row index
        if (selectedRow != -1) {
            // Get the value of the BuyID in the selected row (first column)
            Object buyIDValue = pendingsTable.getValueAt(selectedRow, 0);

            // Set the value to the buyid JLabel
            buyid.setText(buyIDValue.toString());
            modifybtn.setEnabled(true);

        }
    }//GEN-LAST:event_pendingsTableMouseClicked

    private void managependingsnavMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_managependingsnavMouseEntered
        // TODO add your handling code here:
        managependingsnav.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    }//GEN-LAST:event_managependingsnavMouseEntered

    private void managependingsnavMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_managependingsnavMouseExited
        // TODO add your handling code here:
        managependingsnav.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_managependingsnavMouseExited

    private void generatereportnavMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_generatereportnavMouseEntered
        // TODO add your handling code here:
        generatereportnav.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    }//GEN-LAST:event_generatereportnavMouseEntered

    private void generatereportnavMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_generatereportnavMouseExited
        // TODO add your handling code here:
        generatereportnav.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_generatereportnavMouseExited

    private void managelotnavMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_managelotnavMouseEntered
        // TODO add your handling code here:
        managelotnav.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    }//GEN-LAST:event_managelotnavMouseEntered

    private void managelotnavMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_managelotnavMouseExited
        // TODO add your handling code here:
        managelotnav.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_managelotnavMouseExited

    private void managecustomersnavMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_managecustomersnavMouseEntered
        // TODO add your handling code here:
        managecustomersnav.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    }//GEN-LAST:event_managecustomersnavMouseEntered

    private void managecustomersnavMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_managecustomersnavMouseExited
        // TODO add your handling code here:
        managecustomersnav.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_managecustomersnavMouseExited

    private void backbtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backbtnMouseEntered
        // TODO add your handling code here:
        backbtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    }//GEN-LAST:event_backbtnMouseEntered

    private void backbtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backbtnMouseExited
        // TODO add your handling code here:
        backbtn.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_backbtnMouseExited

    
    private void filterLots(String searchQuery) {
    DefaultTableModel model = (DefaultTableModel) pendingsTable.getModel();
    model.setRowCount(0); // Clear the table

    // Loop through the ArrayList of buys
    for (Buy buy : Data.buys) {
        // Check if buy matches the search criteria
        if (String.valueOf(buy.getBuyID()).toLowerCase().contains(searchQuery) || // Buy ID
            buy.getName().toLowerCase().contains(searchQuery) ||                // Name
            buy.getUsername().toLowerCase().contains(searchQuery) ||            // Username
            buy.getContact().toLowerCase().contains(searchQuery) ||              // Contact
            buy.getEmail().toLowerCase().contains(searchQuery) ||                // Email
            buy.getMessage().toLowerCase().contains(searchQuery) ||              // Message
            buy.getStatus().toLowerCase().contains(searchQuery) ||               // Status
            (buy.getPaymentMethod() != null && buy.getPaymentMethod().toLowerCase().contains(searchQuery))) { // Payment Method
            // Add matching buys to the table
            model.addRow(new Object[]{
                buy.getBuyID(),
                buy.getBlockNumber(),
                buy.getLotNumber(),
                buy.getName(),
                buy.getUsername(),
                buy.getContact(),
                buy.getEmail(),
                buy.getPaymentMethod(), // Payment Method
                buy.getStatus(),
                buy.getMessage()
            });
        }
    }

    // Loop through the ArrayList of reserves
    for (Reserve reserve : Data.reserves) {
        // Check if reserve matches the search criteria
        if (String.valueOf(reserve.getReserveID()).toLowerCase().contains(searchQuery) || // Reserve ID
            reserve.getName().toLowerCase().contains(searchQuery) ||                   // Name
            reserve.getUsername().toLowerCase().contains(searchQuery) ||               // Username
            reserve.getContact().toLowerCase().contains(searchQuery) ||                // Contact
            reserve.getEmail().toLowerCase().contains(searchQuery) ||                  // Email
            reserve.getMessage().toLowerCase().contains(searchQuery) ||                // Message
            reserve.getStatus().toLowerCase().contains(searchQuery)) {                 // Status
            // Add matching reserves to the table
            model.addRow(new Object[]{
                reserve.getReserveID(),
                reserve.getBlockNumber(),
                reserve.getLotNumber(),
                reserve.getName(),
                reserve.getUsername(),
                reserve.getContact(),
                reserve.getEmail(),
                null, // No payment method for reserves
                reserve.getStatus(),
                reserve.getMessage()
            });
        }
    }
}
    private void displayPendingLots() {                                              
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) pendingsTable.getModel();
        model.setRowCount(0); // Reset table

        // Fetch and display Buy objects
        if (!Data.buys.isEmpty()) {
            // Loop through the ArrayList of buys and add each buy as a row in the table
            for (Buy buy : Data.buys) {
                Object[] rowData = {
                    buy.getBuyID(),           // Buy ID
                    buy.getBlockNumber(),     // Block Number
                    buy.getLotNumber(),       // Lot Number
                    buy.getName(),            // Name
                    buy.getUsername(),        // Username
                    buy.getContact(),         // Contact
                    buy.getEmail(),           // Email
                    buy.getPaymentMethod(),   // Payment Method
                    buy.getStatus(),          // Status
                    buy.getMessage()          // Message
                };
                model.addRow(rowData); // Add row to table
            }
        }

        // Fetch and display Reserve objects
        if (!Data.reserves.isEmpty()) {
            // Loop through the ArrayList of reserves and add each reserve as a row in the table
            for (Reserve reserve : Data.reserves) {
                Object[] rowData = {
                    reserve.getReserveID(),           // Buy ID
                    reserve.getBlockNumber(),     // Block Number
                    reserve.getLotNumber(),       // Lot Number
                    reserve.getName(),            // Name
                    reserve.getUsername(),        // Username
                    reserve.getContact(),         // Contact
                    reserve.getEmail(),           // Email
                    null,   // Payment Method
                    reserve.getStatus(),          // Status
                    reserve.getMessage()          // Message
                };
                model.addRow(rowData); // Add row to table
            }
        } else {
            
        }
    }
    
    
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel backbtn;
    private javax.swing.JLabel buyid;
    private javax.swing.JLabel generatereportnav;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JLabel managecustomersnav;
    private javax.swing.JLabel managelotnav;
    private javax.swing.JLabel managependingsnav;
    private javax.swing.JButton modifybtn;
    private javax.swing.JTable pendingsTable;
    private javax.swing.JTextField searchField;
    // End of variables declaration//GEN-END:variables
}
