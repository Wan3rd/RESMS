/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package myapps;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import mylibs.Buy;
import mylibs.Data;
import mylibs.Lot;
import mylibs.Reserve;

/**
 *
 * @author DESKTOP
 */
public class changeStatus extends javax.swing.JFrame {

    
    private ArrayList<Lot> lots;
    private ManageLotGUI mainGUI;
    
    public changeStatus() {
        this.lots = lots;
        this.mainGUI = mainGUI;
        initComponents();
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE); 
        setLocationRelativeTo(null); // Center the form on the screen
        pack(); // Pack the components to their preferred sizes
    }

    
    public changeStatus(ArrayList<Lot> lots, ManageLotGUI mainGUI) 
    {
        this.lots = lots;
        this.mainGUI = mainGUI;
        initComponents();
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE); 
        setLocationRelativeTo(null); // Center the form on the screen
        pack(); // Pack the components to their preferred sizes
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tf_lotNumber = new javax.swing.JTextField();
        updateStatusBtn = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        tf_blockNumber = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        tf_newStatus = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tf_lotNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_lotNumberActionPerformed(evt);
            }
        });

        updateStatusBtn.setBackground(new java.awt.Color(153, 255, 153));
        updateStatusBtn.setText("Update Status");
        updateStatusBtn.setAlignmentY(1.0F);
        updateStatusBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateStatusBtnActionPerformed(evt);
            }
        });

        jLabel9.setBackground(new java.awt.Color(255, 102, 102));
        jLabel9.setForeground(new java.awt.Color(0, 0, 153));
        jLabel9.setText("Change Status");

        jLabel1.setText("Enter Block Number:");

        tf_blockNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_blockNumberActionPerformed(evt);
            }
        });

        jLabel2.setText("Enter Lot Number:");

        jLabel3.setText("New Status:");

        tf_newStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_newStatusActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(tf_newStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(37, 37, 37)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tf_blockNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tf_lotNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(140, 140, 140)
                        .addComponent(updateStatusBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(156, 156, 156)
                        .addComponent(jLabel9)))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tf_blockNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(tf_lotNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tf_newStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addComponent(updateStatusBtn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tf_lotNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_lotNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_lotNumberActionPerformed

    private void updateStatusBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateStatusBtnActionPerformed
            try {
                String blockNumber = tf_blockNumber.getText().trim();
                String lotNumber = tf_lotNumber.getText().trim();
                String newStatus = tf_newStatus.getText().trim();

                if (blockNumber.isEmpty() || lotNumber.isEmpty() || newStatus.isEmpty()) {
                    JOptionPane.showMessageDialog(this, "All fields must be filled out.", "Warning", JOptionPane.WARNING_MESSAGE);
                    return;  // Stop if any field is empty
                }
                
                if (!newStatus.equalsIgnoreCase("Available") && !newStatus.equalsIgnoreCase("Sold")&& !newStatus.equalsIgnoreCase("Reserved")&& !newStatus.equalsIgnoreCase("Pending"))
                {
                    JOptionPane.showMessageDialog(this, "Status must be either 'Available' or 'Sold' or 'Reserved or 'Pending'.", "Invalid Status", JOptionPane.WARNING_MESSAGE);
                    return;
                }

                int blockNum = Integer.parseInt(blockNumber);
                int lotNum = Integer.parseInt(lotNumber);

                // Find the lot and change its status
                boolean found = false;
                for (Lot lot : Data.lots) {
                    if (lot.getBlock() == blockNum && lot.getLotNumber() == lotNum) {
                        lot.setStatus(newStatus);  // Assuming you have a setStatus method
                        found = true;
                        
                         if (newStatus.equalsIgnoreCase("Available")) {
                            // If status is 'Available', remove corresponding Buy entries
                            Data.buys.removeIf(buy -> buy.getBlockNumber() == blockNum && buy.getLotNumber() == lotNum);
                            Data.reserves.removeIf(buy -> buy.getBlockNumber() == blockNum && buy.getLotNumber() == lotNum);
                        } else {
                            // Otherwise, update the Buy object
                            for (int i = 0; i < Data.buys.size(); i++) {
                                Buy buy = Data.buys.get(i);
                                if (buy.getBlockNumber() == blockNum && buy.getLotNumber() == lotNum) {
                                    // Create a new Buy object with updated status
                                    Buy updatedBuy = buy.toBuilder()
                                        .setStatus(newStatus)  // Update to the new status
                                        .build();

                                    // Replace the existing Buy object in the ArrayList
                                    Data.buys.set(i, updatedBuy);
                                    break;  // Exit the loop after updating
                                }
                            }
                            for (int i = 0; i < Data.reserves.size(); i++) {
                                Reserve reserve = Data.reserves.get(i);
                                if (reserve.getBlockNumber() == blockNum && reserve.getLotNumber() == lotNum) {
                                    // Create a new Buy object with updated status
                                    Reserve updatedReserve = reserve.toBuilder()
                                        .setStatus(newStatus)  // Update to the new status
                                        .build();

                                    // Replace the existing Buy object in the ArrayList
                                    Data.reserves.set(i, updatedReserve);
                                    break;  // Exit the loop after updating
                                }
                            }
                         }
                        
                
                       
                        JOptionPane.showMessageDialog(this, "Lot status updated successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
                        mainGUI.updateTable();  // Refresh the table in the main GUI
                        dispose();  // Close the form
                        break;
                    }
                }

                if (!found) {
                    JOptionPane.showMessageDialog(this, "No lot found with the provided block and lot number.", "Warning", JOptionPane.WARNING_MESSAGE);
                }

            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Block number and lot number must be valid numbers.", "Warning", JOptionPane.WARNING_MESSAGE);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_updateStatusBtnActionPerformed

    private void tf_blockNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_blockNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_blockNumberActionPerformed

    private void tf_newStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_newStatusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_newStatusActionPerformed

 

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField tf_blockNumber;
    private javax.swing.JTextField tf_lotNumber;
    private javax.swing.JTextField tf_newStatus;
    private javax.swing.JButton updateStatusBtn;
    // End of variables declaration//GEN-END:variables
}
