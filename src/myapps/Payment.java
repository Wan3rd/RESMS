/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package myapps;

import java.awt.Color;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;
import java.util.ArrayList;

import javax.swing.JOptionPane;
import mylibs.Buy;
import mylibs.Console;

import mylibs.Data;
import mylibs.Invoice;
import mylibs.Lot;
import mylibs.Receipt;

/**
 *
 * @author DESKTOP
 */
public class Payment extends javax.swing.JFrame {

    private Lot lot;
    private ManageLotGUI mainGUI;
    private ArrayList<Lot> lots;
    private String username;
    private Invoice selectedInvoice;
    private InvoiceUI invoiceUI;
    Console console = new Console();
    
    public Payment(String username, Invoice invoice, InvoiceUI invoiceUI) {
        initComponents();
        this.username = username;
        this.selectedInvoice = invoice;
        this.invoiceUI = invoiceUI; 
        lots = new ArrayList<>();
        setLocationRelativeTo(null); // Center the form on the screen
        pack(); // Pack the components to their preferred sizes
        displayTransactionDetails();
        hideCardDetailsField();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        paymentMethod = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        backbtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        blockdisplay = new javax.swing.JLabel();
        lotdisplay = new javax.swing.JLabel();
        lotdisplay1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        showusername = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        showname = new javax.swing.JLabel();
        showsize = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        showamount = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        showemail = new javax.swing.JLabel();
        showdate = new javax.swing.JLabel();
        showlotnumber = new javax.swing.JLabel();
        showblocknumber = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        showcontact = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        cashradio = new javax.swing.JRadioButton();
        jLabel14 = new javax.swing.JLabel();
        showlocation = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        card_details = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        creditcardradio = new javax.swing.JRadioButton();
        purchaseButton = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        cvvfield = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        expirytext = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        cardnumberfield = new javax.swing.JTextField();
        cvvtext = new javax.swing.JLabel();
        expiryfield = new javax.swing.JTextField();
        cardnumbertext = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAutoRequestFocus(false);
        setMaximumSize(new java.awt.Dimension(1200, 700));
        setMinimumSize(new java.awt.Dimension(1200, 700));
        setPreferredSize(new java.awt.Dimension(1200, 700));
        setResizable(false);

        jPanel1.setLayout(null);

        backbtn.setBackground(new java.awt.Color(204, 204, 255));
        backbtn.setFont(new java.awt.Font("Berlin Sans FB", 1, 24)); // NOI18N
        backbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/logout_logo.png"))); // NOI18N
        backbtn.setText(" Back");
        backbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backbtnActionPerformed(evt);
            }
        });
        jPanel1.add(backbtn);
        backbtn.setBounds(40, 590, 165, 55);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/house_payment.png"))); // NOI18N
        jPanel1.add(jLabel1);
        jLabel1.setBounds(22, 13, 256, 270);

        blockdisplay.setFont(new java.awt.Font("Franklin Gothic Heavy", 0, 18)); // NOI18N
        blockdisplay.setText("<<Block Number>>");
        jPanel1.add(blockdisplay);
        blockdisplay.setBounds(50, 290, 163, 21);

        lotdisplay.setFont(new java.awt.Font("Franklin Gothic Heavy", 0, 18)); // NOI18N
        lotdisplay.setText("<<Lot Number>>");
        jPanel1.add(lotdisplay);
        lotdisplay.setBounds(50, 320, 142, 21);

        lotdisplay1.setFont(new java.awt.Font("Franklin Gothic Heavy", 0, 36)); // NOI18N
        lotdisplay1.setText("Transaction Summary");
        jPanel1.add(lotdisplay1);
        lotdisplay1.setBounds(376, 43, 364, 41);

        jLabel5.setFont(new java.awt.Font("Perpetua", 1, 18)); // NOI18N
        jLabel5.setText("Contact:");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(700, 110, 140, 21);

        showusername.setFont(new java.awt.Font("Perpetua", 0, 18)); // NOI18N
        showusername.setText("<<username>>");
        showusername.setToolTipText("");
        jPanel1.add(showusername);
        showusername.setBounds(830, 140, 150, 20);

        jLabel6.setFont(new java.awt.Font("Perpetua", 1, 18)); // NOI18N
        jLabel6.setText("Name:");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(380, 110, 80, 21);
        jPanel1.add(jSeparator3);
        jSeparator3.setBounds(380, 310, 790, 10);

        showname.setFont(new java.awt.Font("Perpetua", 0, 18)); // NOI18N
        showname.setText("<<name>>");
        showname.setToolTipText("");
        jPanel1.add(showname);
        showname.setBounds(440, 110, 150, 20);

        showsize.setFont(new java.awt.Font("Perpetua", 0, 18)); // NOI18N
        showsize.setText("<<size>>");
        showsize.setToolTipText("");
        jPanel1.add(showsize);
        showsize.setBounds(510, 270, 150, 20);

        jLabel8.setFont(new java.awt.Font("Perpetua", 1, 18)); // NOI18N
        jLabel8.setText("Username:");
        jPanel1.add(jLabel8);
        jLabel8.setBounds(700, 140, 80, 21);

        jLabel9.setFont(new java.awt.Font("Perpetua", 1, 18)); // NOI18N
        jLabel9.setText("Credit Card");
        jPanel1.add(jLabel9);
        jLabel9.setBounds(490, 420, 100, 30);

        showamount.setFont(new java.awt.Font("Perpetua", 0, 24)); // NOI18N
        showamount.setText("<<amount>>");
        jPanel1.add(showamount);
        showamount.setBounds(550, 330, 200, 28);

        jLabel11.setFont(new java.awt.Font("Perpetua", 1, 18)); // NOI18N
        jLabel11.setText("Size:");
        jPanel1.add(jLabel11);
        jLabel11.setBounds(380, 270, 100, 21);

        jLabel12.setFont(new java.awt.Font("Perpetua", 1, 18)); // NOI18N
        jLabel12.setText("Block Number:");
        jPanel1.add(jLabel12);
        jLabel12.setBounds(380, 210, 140, 21);

        showemail.setFont(new java.awt.Font("Perpetua", 0, 18)); // NOI18N
        showemail.setText("<<email>>");
        showemail.setToolTipText("");
        jPanel1.add(showemail);
        showemail.setBounds(440, 140, 250, 20);

        showdate.setFont(new java.awt.Font("Perpetua", 0, 18)); // NOI18N
        showdate.setText("<<date>>");
        showdate.setToolTipText("");
        jPanel1.add(showdate);
        showdate.setBounds(790, 240, 150, 20);

        showlotnumber.setFont(new java.awt.Font("Perpetua", 0, 18)); // NOI18N
        showlotnumber.setText("<<lotnum>>");
        showlotnumber.setToolTipText("");
        jPanel1.add(showlotnumber);
        showlotnumber.setBounds(510, 240, 150, 20);

        showblocknumber.setFont(new java.awt.Font("Perpetua", 0, 18)); // NOI18N
        showblocknumber.setText("<<blocknum>>");
        showblocknumber.setToolTipText("");
        jPanel1.add(showblocknumber);
        showblocknumber.setBounds(510, 210, 150, 20);

        jLabel13.setFont(new java.awt.Font("Perpetua", 1, 18)); // NOI18N
        jLabel13.setText("Email:");
        jPanel1.add(jLabel13);
        jLabel13.setBounds(380, 140, 80, 21);

        showcontact.setFont(new java.awt.Font("Perpetua", 0, 18)); // NOI18N
        showcontact.setText("<<contact>>");
        showcontact.setToolTipText("");
        jPanel1.add(showcontact);
        showcontact.setBounds(830, 110, 150, 20);
        jPanel1.add(jSeparator4);
        jSeparator4.setBounds(380, 190, 790, 10);

        paymentMethod.add(cashradio);
        cashradio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cashradioMouseClicked(evt);
            }
        });
        jPanel1.add(cashradio);
        cashradio.setBounds(390, 480, 20, 25);

        jLabel14.setFont(new java.awt.Font("Perpetua", 1, 18)); // NOI18N
        jLabel14.setText("Location:");
        jPanel1.add(jLabel14);
        jLabel14.setBounds(700, 210, 140, 21);

        showlocation.setFont(new java.awt.Font("Perpetua", 0, 18)); // NOI18N
        showlocation.setText("<<location>>");
        showlocation.setToolTipText("");
        jPanel1.add(showlocation);
        showlocation.setBounds(790, 210, 150, 20);

        jLabel15.setFont(new java.awt.Font("Perpetua", 1, 18)); // NOI18N
        jLabel15.setText("Lot Number:");
        jPanel1.add(jLabel15);
        jLabel15.setBounds(380, 240, 140, 21);

        card_details.setFont(new java.awt.Font("Perpetua", 1, 24)); // NOI18N
        card_details.setText("Card details");
        jPanel1.add(card_details);
        card_details.setBounds(750, 330, 170, 28);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/credit.png"))); // NOI18N
        jPanel1.add(jLabel2);
        jLabel2.setBounds(420, 410, 60, 50);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/cash.png"))); // NOI18N
        jPanel1.add(jLabel3);
        jLabel3.setBounds(420, 470, 60, 50);

        paymentMethod.add(creditcardradio);
        creditcardradio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                creditcardradioMouseClicked(evt);
            }
        });
        jPanel1.add(creditcardradio);
        creditcardradio.setBounds(390, 420, 20, 25);

        purchaseButton.setBackground(new java.awt.Color(0, 0, 0));
        purchaseButton.setFont(new java.awt.Font("Perpetua", 1, 24)); // NOI18N
        purchaseButton.setForeground(new java.awt.Color(255, 255, 255));
        purchaseButton.setText("Purchase");
        purchaseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                purchaseButtonActionPerformed(evt);
            }
        });
        jPanel1.add(purchaseButton);
        purchaseButton.setBounds(400, 570, 230, 40);

        jLabel10.setFont(new java.awt.Font("Perpetua", 1, 18)); // NOI18N
        jLabel10.setText("Date:");
        jPanel1.add(jLabel10);
        jLabel10.setBounds(700, 240, 140, 21);

        cvvfield.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cvvfieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                cvvfieldFocusLost(evt);
            }
        });
        cvvfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cvvfieldActionPerformed(evt);
            }
        });
        jPanel1.add(cvvfield);
        cvvfield.setBounds(980, 410, 130, 30);

        jLabel17.setFont(new java.awt.Font("Perpetua", 1, 24)); // NOI18N
        jLabel17.setText("Total Amount: ");
        jPanel1.add(jLabel17);
        jLabel17.setBounds(380, 330, 170, 28);

        expirytext.setFont(new java.awt.Font("Perpetua", 1, 18)); // NOI18N
        expirytext.setText("Expiry");
        jPanel1.add(expirytext);
        expirytext.setBounds(750, 450, 120, 21);

        jLabel19.setFont(new java.awt.Font("Perpetua", 1, 18)); // NOI18N
        jLabel19.setText("Cash");
        jPanel1.add(jLabel19);
        jLabel19.setBounds(490, 470, 50, 40);

        jLabel20.setFont(new java.awt.Font("Perpetua", 1, 24)); // NOI18N
        jLabel20.setText("Payment details");
        jPanel1.add(jLabel20);
        jLabel20.setBounds(380, 370, 170, 28);

        cardnumberfield.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cardnumberfieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                cardnumberfieldFocusLost(evt);
            }
        });
        cardnumberfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cardnumberfieldActionPerformed(evt);
            }
        });
        jPanel1.add(cardnumberfield);
        cardnumberfield.setBounds(750, 410, 200, 30);

        cvvtext.setFont(new java.awt.Font("Perpetua", 1, 18)); // NOI18N
        cvvtext.setText("CVV");
        jPanel1.add(cvvtext);
        cvvtext.setBounds(980, 380, 60, 21);

        expiryfield.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                expiryfieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                expiryfieldFocusLost(evt);
            }
        });
        expiryfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                expiryfieldActionPerformed(evt);
            }
        });
        jPanel1.add(expiryfield);
        expiryfield.setBounds(750, 480, 200, 30);

        cardnumbertext.setFont(new java.awt.Font("Perpetua", 1, 18)); // NOI18N
        cardnumbertext.setText("Card Number ");
        jPanel1.add(cardnumbertext);
        cardnumbertext.setBounds(750, 380, 120, 21);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backbtnActionPerformed
        // TODO add your handling code here:
        this.dispose();
        InvoiceUI invoice = new InvoiceUI(username); // Pass the welcome text back to CustomerUI
        invoice.setVisible(true);
    }//GEN-LAST:event_backbtnActionPerformed

    private void cvvfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cvvfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cvvfieldActionPerformed

    private void cardnumberfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cardnumberfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cardnumberfieldActionPerformed

    private void expiryfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_expiryfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_expiryfieldActionPerformed

    private void creditcardradioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_creditcardradioMouseClicked
        // TODO add your handling code here:
        card_details.setVisible(true);
        cardnumbertext.setVisible(true);
        cvvtext.setVisible(true);
        expirytext.setVisible(true);
        cardnumberfield.setVisible(true);
        cvvfield.setVisible(true);
        expiryfield.setVisible(true);
        purchaseButton.setEnabled(true);
        if (cardnumberfield.getText().equals("")) {
        cardnumberfield.setText("Card Number");
        cardnumberfield.setForeground(new Color(153, 153, 153)); // Grey color for placeholder
        }

        if (cvvfield.getText().equals("")) {
            cvvfield.setText("CVV");
            cvvfield.setForeground(new Color(153, 153, 153)); // Grey color for placeholder
        }

        if (expiryfield.getText().equals("")) {
            expiryfield.setText("MM/YY");
            expiryfield.setForeground(new Color(153, 153, 153)); // Grey color for placeholder
        }
    }//GEN-LAST:event_creditcardradioMouseClicked

    private void cashradioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cashradioMouseClicked
        // TODO add your handling code here:
        card_details.setVisible(false);
        cardnumbertext.setVisible(false);
        cvvtext.setVisible(false);
        expirytext.setVisible(false);
        cardnumberfield.setVisible(false);
        cvvfield.setVisible(false);
        expiryfield.setVisible(false);
        purchaseButton.setEnabled(true);
    }//GEN-LAST:event_cashradioMouseClicked

    private void cvvfieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cvvfieldFocusLost
        // TODO add your handling code here:
        if(cvvfield.getText().equals("")){
            cvvfield.setText("CVV");
            cvvfield.setForeground(new Color(153,153,153));
        }
    }//GEN-LAST:event_cvvfieldFocusLost

    private void cvvfieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cvvfieldFocusGained
        // TODO add your handling code here:
        if(cvvfield.getText().equals("CVV")){
            cvvfield.setText("");
            cvvfield.setForeground(new Color(0,0,0));
        }
    }//GEN-LAST:event_cvvfieldFocusGained

    private void cardnumberfieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cardnumberfieldFocusLost
        // TODO add your handling code here:
        if (cardnumberfield.getText().equals("")) {
        cardnumberfield.setText("Card Number"); // Set placeholder text
        cardnumberfield.setForeground(new Color(153, 153, 153)); // Grey color for placeholder
        }
    }//GEN-LAST:event_cardnumberfieldFocusLost

    private void cardnumberfieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cardnumberfieldFocusGained
        // TODO add your handling code here:
        if (cardnumberfield.getText().equals("Card Number")) {
            cardnumberfield.setText("");
            cardnumberfield.setForeground(new Color(0, 0, 0)); // Black color for input
        }
    }//GEN-LAST:event_cardnumberfieldFocusGained

    private void expiryfieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_expiryfieldFocusLost
        // TODO add your handling code here:
        if (expiryfield.getText().equals("")) {
            expiryfield.setText("MM/YY"); // Set placeholder text
            expiryfield.setForeground(new Color(153, 153, 153)); // Grey color for placeholder
        }
    }//GEN-LAST:event_expiryfieldFocusLost


    private void expiryfieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_expiryfieldFocusGained
        // TODO add your handling code here:
        if (expiryfield.getText().equals("MM/YY")) {
            expiryfield.setText("");
            expiryfield.setForeground(new Color(0, 0, 0)); // Black color for input
        }
    }//GEN-LAST:event_expiryfieldFocusGained


    private boolean isValidCardNumber(String cardNumber) {
        // Check if card number has exactly 16 digits
        if (!cardNumber.matches("\\d{16}")) {
            return false;
        }

        return luhnCheck(cardNumber);
    }

    

    // Implementing the Luhn Algorithm to validate card numbers
    private boolean luhnCheck(String cardNumber) {
        int sum = 0;
        boolean alternate = false;

        // Start from the last digit and move backwards
        for (int i = cardNumber.length() - 1; i >= 0; i--) {
            int n = Integer.parseInt(cardNumber.substring(i, i + 1));

            if (alternate) {
                n *= 2;
                if (n > 9) {    
                    n = (n % 10) + 1;
                }
            }
            sum += n;
            alternate = !alternate;
        }
        // Valid if the sum is a multiple of 10
        return (sum % 10 == 0);
    }
    
    // Is the card valid
    private boolean isValidCardInfo(String cardNumber, String cvv) {
    // Check if the card number is 16 digits
        if (!isValidCardNumber(cardNumber)) {
            System.out.println("Invalid card number.");
            return false;
        }

        // Check if CVV is exactly 3 digits
        if (!cvv.matches("\\d{3}")) {
            System.out.println("Invalid CVV.");
            return false;
        }


        return true;
    }

    private void purchaseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_purchaseButtonActionPerformed
        // TODO add your handling code here:
        try
        {
            String paymentMethod = "";
            String cardNumber = cardnumberfield.getText();
            String cvv = cvvfield.getText().trim();
            String expiry = expiryfield.getText().trim();
            if(creditcardradio.isSelected())
            {
                paymentMethod = "Credit Card";
                if (cardNumber.isEmpty() || cvv.isEmpty() || expiry.isEmpty()) 
                {
                    JOptionPane.showMessageDialog(this, "All fields must be filled out.", "Warning", JOptionPane.WARNING_MESSAGE);
                    return;  // Stop further processing if any field is empty
                }
                
                // CVV and expiry validation (if implemented separately)
                if (!isValidCardInfo(cardNumber, cvv)) {
                    JOptionPane.showMessageDialog(this, "Invalid card details. Please check and try again.", "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            }
            else if(cashradio.isSelected())
            {
                paymentMethod = "Cash";
            }
            
            String latestTransactionID = Data.checkLatestTransactionID();    
            String transactionID = "T" + (Integer.parseInt(latestTransactionID.substring(1)) + 1);   

            if (selectedInvoice == null) {
                JOptionPane.showMessageDialog(null, "No invoice selected", "Error", JOptionPane.ERROR_MESSAGE);
                return; // Avoid proceeding if no invoice is selected
            }

            String user = username;
            String name = selectedInvoice.getName();
            String date = selectedInvoice.getDate();
            int blocknum = selectedInvoice.getBlockNumber();
            int lotnum = selectedInvoice.getLotNumber();
            String location = selectedInvoice.getLocation();
            double amount = selectedInvoice.getTotalAmount();


            Receipt receipt = new Receipt.Builder()
                    .setTransactionID(transactionID)
                    .setUsername(user)
                    .setDate(date)
                    .setTotalAmount(amount)
                    .setBlockNumber(blocknum)
                    .setLotNumber(lotnum)
                    .setLocation(location)
                    .setName(name)
                    .setPaymentMethod(paymentMethod)
                    .build();
            
            Data.receipts.add(receipt);


            boolean lotFound = false;
            for (Lot lot : Data.lots)
            {
                if (lot.getBlock() == blocknum && lot.getLotNumber() == lotnum) 
                {
                    lot.setStatus("Sold");
                    lotFound = true;
                }
            }
            
            for (int i = 0; i < Data.buys.size(); i++) {
                Buy buy = Data.buys.get(i);
                if (buy.getBlockNumber() == blocknum && buy.getLotNumber() == lotnum) {
                    // Update the object using the builder and set the updated Buy object back into the list
                    Buy updatedBuy = buy.toBuilder()
                                        .setStatus("Sold")
                                        .setPaymentMethod(paymentMethod)
                                        .build();
                    Data.buys.set(i, updatedBuy); // Replace the old Buy object with the updated one
                    lotFound = true;
                }
            }


            if (lotFound) {
                JOptionPane.showMessageDialog(null, "Receipt created successfully for transaction ID: " + transactionID, "Success", JOptionPane.INFORMATION_MESSAGE);
                console.transactionsuccess(transactionID);
                invoiceUI.refreshInvoiceTable(username);
            } else {
                JOptionPane.showMessageDialog(null, "Lot not found in the system.", "Error", JOptionPane.ERROR_MESSAGE);
            }

            this.setVisible(false);
            CustomerUI customer = new CustomerUI(username);
            customer.setVisible(true);

        }
        catch(Exception e) {
            JOptionPane.showMessageDialog(null, "An error occurred: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            console.transactionfailed();
            e.printStackTrace();
        }
    }//GEN-LAST:event_purchaseButtonActionPerformed

    

    private void hideCardDetailsField()
    {
        card_details.setVisible(false);
        cardnumbertext.setVisible(false);
        cvvtext.setVisible(false);
        expirytext.setVisible(false);
        cardnumberfield.setVisible(false);
        cvvfield.setVisible(false);
        expiryfield.setVisible(false);
        purchaseButton.setEnabled(false);
        if(cvvfield.getText().equals("")){
            cvvfield.setText("CVV");
            cvvfield.setForeground(new Color(153,153,153));
        }
        
    }
    
    private void displayTransactionDetails()
    {
        String user = username;
        String name = "";
        String documentID = "";
        String email = "";
        String contact = "";
        int blockNumber = 0;
        int lotNumber = 0;
        String date = "";
        double totalAmount = 0.0;
        double size = 0.0;
        String location = "";
        

        name = selectedInvoice.getName();
        documentID = selectedInvoice.getDocumentID();
        blockNumber = selectedInvoice.getBlockNumber();
        lotNumber = selectedInvoice.getLotNumber();
        date = selectedInvoice.getDate();
        totalAmount = selectedInvoice.getTotalAmount();
        size = selectedInvoice.getSize();
        location = selectedInvoice.getLocation();
        email = selectedInvoice.getEmail();
        contact = selectedInvoice.getContactNumber();

        
        showusername.setText(user);
        showblocknumber.setText(String.valueOf(blockNumber));
        showlotnumber.setText(String.valueOf(lotNumber));
        showdate.setText(date);
        showsize.setText(String.valueOf(size)+ " sqm");
        showlocation.setText(location);
        showname.setText(name);
        showemail.setText(email);
        showcontact.setText(contact);
        showamount.setText(String.valueOf(totalAmount));
        blockdisplay.setText("Block # "+String.valueOf(blockNumber));
        lotdisplay.setText("Lot # "+String.valueOf(lotNumber));
        
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backbtn;
    private javax.swing.JLabel blockdisplay;
    private javax.swing.JLabel card_details;
    private javax.swing.JTextField cardnumberfield;
    private javax.swing.JLabel cardnumbertext;
    private javax.swing.JRadioButton cashradio;
    private javax.swing.JRadioButton creditcardradio;
    private javax.swing.JTextField cvvfield;
    private javax.swing.JLabel cvvtext;
    private javax.swing.JTextField expiryfield;
    private javax.swing.JLabel expirytext;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JLabel lotdisplay;
    private javax.swing.JLabel lotdisplay1;
    private javax.swing.ButtonGroup paymentMethod;
    private javax.swing.JButton purchaseButton;
    private javax.swing.JLabel showamount;
    private javax.swing.JLabel showblocknumber;
    private javax.swing.JLabel showcontact;
    private javax.swing.JLabel showdate;
    private javax.swing.JLabel showemail;
    private javax.swing.JLabel showlocation;
    private javax.swing.JLabel showlotnumber;
    private javax.swing.JLabel showname;
    private javax.swing.JLabel showsize;
    private javax.swing.JLabel showusername;
    // End of variables declaration//GEN-END:variables
}
